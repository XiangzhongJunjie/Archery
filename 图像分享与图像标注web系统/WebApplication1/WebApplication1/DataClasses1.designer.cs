#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lizifan")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPicture(Picture instance);
    partial void UpdatePicture(Picture instance);
    partial void DeletePicture(Picture instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["lizifanConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Picture> Picture
		{
			get
			{
				return this.GetTable<Picture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Uid;
		
		private string _Upwd;
		
		private string _Uname;
		
		private string _Utype;
		
		private string _Uqq;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUidChanging(string value);
    partial void OnUidChanged();
    partial void OnUpwdChanging(string value);
    partial void OnUpwdChanged();
    partial void OnUnameChanging(string value);
    partial void OnUnameChanged();
    partial void OnUtypeChanging(string value);
    partial void OnUtypeChanged();
    partial void OnUqqChanging(string value);
    partial void OnUqqChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upwd", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Upwd
		{
			get
			{
				return this._Upwd;
			}
			set
			{
				if ((this._Upwd != value))
				{
					this.OnUpwdChanging(value);
					this.SendPropertyChanging();
					this._Upwd = value;
					this.SendPropertyChanged("Upwd");
					this.OnUpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uname", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Uname
		{
			get
			{
				return this._Uname;
			}
			set
			{
				if ((this._Uname != value))
				{
					this.OnUnameChanging(value);
					this.SendPropertyChanging();
					this._Uname = value;
					this.SendPropertyChanged("Uname");
					this.OnUnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utype", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Utype
		{
			get
			{
				return this._Utype;
			}
			set
			{
				if ((this._Utype != value))
				{
					this.OnUtypeChanging(value);
					this.SendPropertyChanging();
					this._Utype = value;
					this.SendPropertyChanged("Utype");
					this.OnUtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uqq", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Uqq
		{
			get
			{
				return this._Uqq;
			}
			set
			{
				if ((this._Uqq != value))
				{
					this.OnUqqChanging(value);
					this.SendPropertyChanging();
					this._Uqq = value;
					this.SendPropertyChanged("Uqq");
					this.OnUqqChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Picture")]
	public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pid;
		
		private string _Sname;
		
		private string _Sphone;
		
		private string _Pic;
		
		private string _Information;
		
		private string _explaination;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPidChanging(int value);
    partial void OnPidChanged();
    partial void OnSnameChanging(string value);
    partial void OnSnameChanged();
    partial void OnSphoneChanging(string value);
    partial void OnSphoneChanged();
    partial void OnPicChanging(string value);
    partial void OnPicChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnexplainationChanging(string value);
    partial void OnexplainationChanged();
    #endregion
		
		public Picture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pid
		{
			get
			{
				return this._Pid;
			}
			set
			{
				if ((this._Pid != value))
				{
					this.OnPidChanging(value);
					this.SendPropertyChanging();
					this._Pid = value;
					this.SendPropertyChanged("Pid");
					this.OnPidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sname", DbType="NChar(10)")]
		public string Sname
		{
			get
			{
				return this._Sname;
			}
			set
			{
				if ((this._Sname != value))
				{
					this.OnSnameChanging(value);
					this.SendPropertyChanging();
					this._Sname = value;
					this.SendPropertyChanged("Sname");
					this.OnSnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sphone", DbType="NChar(10)")]
		public string Sphone
		{
			get
			{
				return this._Sphone;
			}
			set
			{
				if ((this._Sphone != value))
				{
					this.OnSphoneChanging(value);
					this.SendPropertyChanging();
					this._Sphone = value;
					this.SendPropertyChanged("Sphone");
					this.OnSphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", DbType="NVarChar(50)")]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this.OnPicChanging(value);
					this.SendPropertyChanging();
					this._Pic = value;
					this.SendPropertyChanged("Pic");
					this.OnPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="NVarChar(MAX)")]
		public string Information
		{
			get
			{
				return this._Information;
			}
			set
			{
				if ((this._Information != value))
				{
					this.OnInformationChanging(value);
					this.SendPropertyChanging();
					this._Information = value;
					this.SendPropertyChanged("Information");
					this.OnInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explaination", DbType="NVarChar(MAX)")]
		public string explaination
		{
			get
			{
				return this._explaination;
			}
			set
			{
				if ((this._explaination != value))
				{
					this.OnexplainationChanging(value);
					this.SendPropertyChanging();
					this._explaination = value;
					this.SendPropertyChanged("explaination");
					this.OnexplainationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
